#!/bin/bash
#
# ./um-dependancies
# Create a script that lists file dependancies of UMUI basis files.
#
# AUTHORS:
# Scott Wales <scott.wales@unimelb.edu.au>
# ARC Centre of Excellence for Climate System Science 
# <climate_help@nf.nci.org.au>
#
# Available at https://github.com/ScottWales/um-utils
#
# ----------------------------------------------------------------------
# Copyright 2012 ARC Centre of Excellence for Climate System Science
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------
#
# A script is created because environment variables may be set up differently
# on the local and remote machines. Running the script will produce a list of
# files.
#

function usage {
    echo "$0: Create a script to list UM file dependancies"
    echo "Usage: $0 INPUTS ... > OUTPUT"
    echo "INPUTS: UM basis files"
    echo "OUTPUT: Shell script that when run lists used files"
}

options=$(getopt --options h --longoptions help -- "$@")
eval set -- "$options"

while true; do
    case "$1" in
        -h|--help)
            usage; shift ;;
        --)
            shift; break ;;
    esac
done

if [ "$#" -lt 1 ]; then
    echo "No input" >&2
    exit 1
fi

# Hold parts in separate temp files, to be pasted together in the output
envar_name=$TMPDIR/$0-envname.$$
envar_val=$TMPDIR/$0-envval.$$
apath=$TMPDIR/$0-apath.$$
afile=$TMPDIR/$0-afile.$$

# Output script header
echo "#!/bin/bash"
cat << EOF
#
# Displays a list of files referenced in the UM basis files:
# $@
#

EOF

# Handle multiple basis files
for file in "$@"; do
    echo "#===================="
    echo "# $file";
    echo "#===================="

    # Regulare expressions match 
    # VAR = ' foo bar '
    # VAR = ' one ',
    #       ' two ',
    #       ' three '
    # Leading and trailing spaces are removed from values (internal spaces preserved)
    # Matches are done between the variable declaration and the next line not ending with ,

    echo "# UMUI Environment variables"
    sed -n $file -e '/\<ENVAR_NAME=/,/[^,]$/s|.*'"'"'\s*\(\S\(.*\S\)\?\)\s*'"'"'\s*,\?.*|\1|p' > $envar_name
    sed -n $file -e '/\<ENVAR_VAL=/,/[^,]$/s|.*'"'"'\s*\(\S\(.*\S\)\?\)\s*'"'"'\s*,\?.*|\1|p' > $envar_val
    paste --delimiters="=" $envar_name $envar_val
    echo

    echo "# List of referenced files"
    echo "cat << EOF"

    # Ancillaries
    sed -n $file -e '/\<APATH=/,/[^,]$/s|.*'"'"'\s*\(\S\(.*\S\)\?\)\s*'"'"'\s*,\?.*|\1|p' > $apath
    sed -n $file -e '/\<AFILE=/,/[^,]$/s|.*'"'"'\s*\(\S\(.*\S\)\?\)\s*'"'"'\s*,\?.*|\1|p' > $afile
    paste --delimiters="/" $apath $afile
    echo
    
    # Hand edits
    sed -n $file -e '/\<HEDFILE=/,/[^,]$/s|.*'"'"'\s*\(\S\(.*\S\)\?\)\s*'"'"'\s*,\?.*|\1|p'
    echo

    # Stashmaster, User Stash and Stash Prognostics
    sed -n $file -e '/\<SMDIR=/,/[^,]$/s|.*'"'"'\s*\(\S\(.*\S\)\?\)\s*'"'"'\s*,\?.*|\1/STASHmaster_A|p'
    sed -n $file -e '/\<USERLST_A=/,/[^,]$/s|.*'"'"'\s*\(\S\(.*\S\)\?\)\s*'"'"'\s*,\?.*|\1|p'
    sed -n $file -e '/\<USRP_FILE_A=/,/[^,]$/s|.*'"'"'\s*\(\S\(.*\S\)\?\)\s*'"'"'\s*,\?.*|\1|p'
    echo

    echo "EOF"
    echo
done

rm -f $envar_name $envar_val $apath $afile
